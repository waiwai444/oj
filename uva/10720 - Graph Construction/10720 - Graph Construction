graph theory

====================================================================================================
The following code uses the Havel-Hakimi algorithm. The proof is easy, and can be found on internet or on books of graph theory. 

0.095s in uva
====================================================================================================
#include <stdio.h>
#include <algorithm>

int n, deg[10000];

bool cmp(int x, int y)
{
	return x > y;
}

bool is_graphic()
{
	int i, sum = 0;
	for(i = 0; i < n; i++)
		sum += deg[i];
	if(sum & 1)
		return false;
	
	std::sort(deg, deg+n, cmp);
	while(deg[n-1] == 0)
		n--;
	while(n > 0)
	{		
		if(deg[0]+1 > n)
			return false;
		for(i = 1; i <= deg[0]; i++)
			--deg[i];
		deg[0] = 0;
		
		std::sort(deg, deg+n, cmp);
		while(deg[n-1] == 0)
			n--;
	}
	return true;
}

int main()
{
	int i;
	while(scanf("%d", &n), n)
	{
		for(i = 0; i < n; i++)
			scanf("%d", &deg[i]);
		if(is_graphic())
			printf("Possible\n");
		else
			printf("Not possible\n");
	}
	return 0;
}
====================================================================================================


====================================================================================================
Another more efficient algorithm employs the Erdos-Gallai theorem. 
The code can be found in the cpp file.

0.049s in uva
====================================================================================================

