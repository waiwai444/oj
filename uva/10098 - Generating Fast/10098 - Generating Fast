permutation

A simple problem
Generate all permutations. 


====================================================================================================
The following code uses recursion to solve it.
0.072s in uva
====================================================================================================
#include <stdio.h>
#include <string.h>
#include <algorithm>

char input[11], output[11];
int input_len, count[128];

void dfs(int cur)
{
    if(cur == input_len)
    {
        output[cur] = '\0';
        printf("%s\n", output);
    }
    else
        for(int i = 0; i < input_len; i++)
            if((i == 0 || input[i] != input[i-1]) && count[input[i]] > 0)
            {
                count[input[i]]--;
                output[cur] = input[i];
                dfs(cur+1);
                count[input[i]]++;
            }
}

int main()
{
    int n;
    scanf("%d", &n);
    while(n--)
    {
        scanf("%s", input);
        input_len = (int)strlen(input);
        std::sort(input, &input[input_len]);
        memset(count, 0, sizeof(count));
        for(int i = 0; i < input_len; i++)
            count[input[i]]++;
        dfs(0);
        printf("\n");
    }
    return 0;
}
====================================================================================================

We can also use std::next_permutation() to simplify the problem. The code is in the cpp file.

0.042s in uva.


Similar problem:
	uva 195
	poj 1256
